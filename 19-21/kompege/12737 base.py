"""
№ 12737 (Уровень: Базовый)

(C. Горбачёв) Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежат две кучи камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в одну из куч (по своему выбору) пять камней или увеличить количество камней в куче в два раза. Для того чтобы делать ходы, у каждого игрока есть неограниченное количество камней. Игра завершается в тот момент, когда произведение камней в кучах становится больше 384. Победителем считается игрок, сделавший последний ход, т.е. первым получивший такую позицию, при которой в кучах будет 385 или больше камней. В начальный момент в первой куче было восемь камней, во второй куче – S камней; 1 ≤ S ≤ 54. Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника.

Известно, что Ваня выиграл своим первым ходом после неудачного первого хода Пети. Укажите минимальное значение S, когда такая ситуация возможна.
"""
"""
Задание 20.

Для игры, описанной в предыдущем задании, найдите минимальное и максимальное S, при которых у Пети есть выигрышная стратегия, причём одновременно выполняются два условия:

− Петя не может выиграть за один ход;
− Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.

В ответ запишите сначала минимальное значение, затем максимальное.
"""
"""
Задание 21.

Для игры, описанной в задании 19, найдите минимальное значение S, при котором одновременно выполняются два условия:

– у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
– у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.
"""

# этот вариант фукнции нужен, чтобы выполнить задание 19
def f(summ1, summ2, steps):
    if summ1 * summ2 > 384: return steps % 2 == 0
    if steps == 0: return 0
    ways = [
        f(summ1 + 5, summ2, steps - 1),
        f(summ1 * 2, summ2, steps - 1),
        f(summ1, summ2 + 5, steps - 1),
        f(summ1, summ2 * 2, steps - 1)
    ]
    return any(ways) if steps % 2 != 0 else any(ways)


# Для этой задачи мы меняем else all(ways) ---> any(ways).
# Эта запись значит, что мы ищем неудачные ходы.
# Так мы говорим, что "победитель делает любой ход, но при этом хороший ход,
#   но и проигравший делает любой ход, но плохой"
print("19)", min([r for r in range(1, 55) if not f(8, r, 1) and f(8, r, 2)]))

# а этот вариант фукнции нужен, чтобы выполнить оставшиеся задания (надо было всего-то поменять any --> all в else
def f(summ1, summ2, steps):
    if summ1 * summ2 > 384: return steps % 2 == 0
    if steps == 0: return 0
    ways = [
        f(summ1 + 5, summ2, steps - 1),
        f(summ1 * 2, summ2, steps - 1),
        f(summ1, summ2 + 5, steps - 1),
        f(summ1, summ2 * 2, steps - 1)
    ]
    return any(ways) if steps % 2 != 0 else all(ways)


print("20)", [r for r in range(1, 55) if not f(8, r, 1) and f(8, r, 3)])
print("21)", min([r for r in range(1, 55) if not f(8, r, 2) and f(8, r, 4)]))


# P.S. 19е вообще нифига не очевидно
"""
№ 12108 Новогодний вариант (Уровень: Базовый)

(М. Попков) В ожидании Сант а -Клауса и подарочков два игрока, Персиковый Эльф Полина и Веселая Фея Валентина, играют в следующую игру. Перед игроками лежит две кучи снежинок. Игроки ходят по очереди, первый ход делает Полина. За один ход игрок может добавить в одну из куч (по своему выбору) три или семь снежинок либо увеличить количество снежинок в куче в четыре раза. Для того чтобы делать ходы, у каждого игрока есть неограниченное количество снежинок.

Игра завершается в тот момент, когда суммарное количество снежинок в кучах становится не менее 275.

Победителем считается игрок, сделавший последний ход, т.е. первым получивший суммарно в кучах 275 или больше снежинок.

В начальный момент в первой куче было 58 снежинок, во второй – S снежинок; 1 ≤ S ≤ 216.

Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника.

Укажите минимальное значение S, при котором Полина не может выиграть за один ход, но при любом ходе Полины Валентина может выиграть своим первым ходом.
"""

"""
Задание 20.

Для игры, описанной в задании 19, найдите два таких значения S, при которых у Полины есть выигрышная стратегия, причём одновременно выполняются два условия:

− Полина не может выиграть за один ход;

− Полина может выиграть своим вторым ходом независимо от того, как будет ходить Валентина.

Если значений больше двух, в ответ запишите сначала наименьшее значение, а за ним наибольшее.
"""

"""
Задание 21.

Для игры, описанной в задании 19, найдите минимальное значение S, при котором одновременно выполняются два условия:

– у Валентины есть выигрышная стратегия, позволяющая ей выиграть первым или вторым ходом при любой игре Полины;

– у Валентины нет стратегии, которая позволит ей гарантированно выиграть первым ходом.

Если найдено несколько значений S, в ответе запишите наименьшее из них.
"""


def f(counter1, counter2, step):
    if counter1+counter2 >= 275: return step%2==0
    if step == 0: return 0
    ways = [
        f(counter1 + 3, counter2, step - 1), f(counter1, counter2 + 3, step - 1),
        f(counter1 + 7, counter2, step - 1), f(counter1, counter2 + 7, step - 1),
        f(counter1 * 4, counter2, step - 1), f(counter1, counter2 * 4, step - 1)
    ]
    return any(ways) if step%2!=0 else all(ways)


print(f"19) {[r for r in range(1, 217) if f(58, r, 2)][0]}")

a = [r for r in range(1, 217) if not(f(58,r,1)) and f(58, r, 3)]
print(f"20) {a[0]} {a[-1]}")
print(f"21) {[r for r in range(1, 217) if not(f(58,r,2)) and f(58, r, 4)][0]}")
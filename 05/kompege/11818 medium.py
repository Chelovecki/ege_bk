"""
№ 11818 (Уровень: Средний)
(Л. Шастин) На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
1. Строится запись числа N в системе счисления с основанием 12.
2. Далее эта запись обрабатывается по следующему правилу:
а) если число N делится на 4, то слева к нему приписывается «2», а справа «64»;
б) если число N на 4 не делится, то в конец числа дописывается его максимальная цифра в системе счисления с основанием 12.
Полученная таким образом запись является двенадцатеричной записью искомого числа R.
3. Результат переводится в десятичную систему и выводится на экран.
Например, для исходного числа 11 = B12 результатом является число BB12= 143, а для исходного числа 12 = 1012 это число 2106412 = 43276.
Укажите минимальное число R, большее 1799, которое может быть получено с помощью описанного алгоритма. В ответе запишите это число в десятичной системе счисления.
"""


def f12(n: int):
    alph_12 = '0123456789AB'
    res = ''
    while n != 0:
        # тоже самое, что и n%12, только будем обращаться по индексу к букве 12ричной СС
        res += alph_12[n % 12]
        n //= 12
    return res[::-1]


def funk(number: int):
    n = f12(number)
    if number % 4 == 0:
        n = f"2{n}64"
    else:
        # дописывается максимальная цифра в системе счисления с основанием 12
        n += max(n)
    return int(n, 12)


print("проверка: 11 =", funk(11), ", 12 =", funk(12))
answer = set()
for r in range(10_000):
    res = funk(r)
    if res > 1799:
        answer.add(res)

print(min(answer))
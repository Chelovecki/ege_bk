# № 12110 Новогодний вариант (Уровень: Базовый)
#
# (М. Попков) В волшебной новогодней программе исполнителя, Дед Мороз хочет создать особенную траекторию чисел, чтобы волшебный результат был равен 98. При этом, чтобы привнести новогоднее настроение, он установил следующие правила:
# А. Магия еловки: Вычесть 1.
# Если исполнитель стоит перед еловкой, он может сорвать с нее одну игрушку, уменьшив число на 1. Новогодняя волшебная еловка навсегда останется на экране.
# В. Путеводная звезда: Найти целую часть от деления на 3.
# Если исполнитель заметит сияющую звезду, он может воспользоваться ей для нахождения целой части от деления числа на 3. Звезда направляет его по волшебному пути.
# С. Сказочный фонарик: Найти целую часть квадратного корня.
# Встретив сказочный фонарик, исполнитель может использовать его свет, чтобы найти целую часть квадратного корня числа. Фонарик подсвечивает волшебные числа на своем пути.
# Дед Мороз создает волшебную новогоднюю программу для исполнителя, чтобы при исходном числе 98 он получил результат 2. Траектория чисел не должна содержать числа 4 и 43, но обязательно должна содержать число 14. Сколько существует вариантов таких программ, чтобы волшебная траектория привела к новогоднему волшебству?

# --------------------------------------------------

from functools import lru_cache


@lru_cache(None)
def f(a, b):
    if a < b or a == 4 or a == 43: return 0
    if a == b: return 1

    return f(a - 1, b) + f(a // 3, b) + f(int(a ** 0.5), b)


#  да, все решение - это поменять знак в условии, и поменять направление вычисления: с большого к малому
print(f(98, 14) * f(14, 2))
